//dataset
var l9 = ee.ImageCollection("LANDSAT/LC09/C02/T1_L2"),
    l8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2"),
    l7 = ee.ImageCollection("LANDSAT/LE07/C02/T1_L2"),
    l4 = ee.ImageCollection("LANDSAT/LT04/C02/T1_L2"),
    l5 = ee.ImageCollection("LANDSAT/LT05/C02/T1_L2"),
    roi = ee.FeatureCollection("projects/ee-isfacool/assets/Srinagar");
// Updated Year list to map
var yearList = [1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025];
Map.centerObject(roi, 10);

// Function to filter collections
function filterCol(col, roi, date) {
  return col.filterDate(date[0], date[1]).filterBounds(roi);
}

// Composite functions
function landsat457(roi, date) {
  var col = filterCol(l4, roi, date).merge(filterCol(l5, roi, date)).merge(filterCol(l7, roi, date));
  var image = col.map(cloudMaskTm).median().clip(roi);
  return image;
}

function landsat89(roi, date) {
  var col = filterCol(l8, roi, date).merge(filterCol(l9, roi, date));
  var image = col.map(cloudMaskOli).median().clip(roi);
  return image;
}

// Cloud masking functions (Updated for accuracy)
function cloudMaskTm(image) {
  var qa = image.select('QA_PIXEL');
  var mask = qa.bitwiseAnd(1 << 3).eq(0).and(qa.bitwiseAnd(1 << 4).eq(0));
  return image.updateMask(mask).select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'], ['B2', 'B3', 'B4', 'B5', 'B6', 'B7']);
}

function cloudMaskOli(image) {
  var qa = image.select('QA_PIXEL');
  var mask = qa.bitwiseAnd(1 << 3).eq(0).and(qa.bitwiseAnd(1 << 4).eq(0));
  return image.updateMask(mask).select(['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7'], ['B2', 'B3', 'B4', 'B5', 'B6', 'B7']);
}

var builtCol = ee.ImageCollection(yearList.map(function(year) {
  var start = ee.Date.fromYMD(year, 1, 1);
  var end = ee.Date.fromYMD(year, 12, 31);
  var date = [start, end];
  var landsat = (year < 2014) ? landsat457 : landsat89;
  var image = landsat(roi, date).multiply(0.0000275).add(-0.2);
  
  var bandMap = { 
    NIR: image.select('B5'), 
    SWIR: image.select('B6'), 
    RED: image.select('B4'), 
    GREEN: image.select('B3'), 
    BLUE: image.select('B2') 
  };
  
  // Compute indices
  var ndbi = image.expression('(SWIR - NIR) / (SWIR + NIR)', bandMap).rename('NDBI');
  var mndwi = image.expression('(GREEN - SWIR) / (GREEN + SWIR)', bandMap).rename('MNDWI');
  var bsi = image.expression('((RED + SWIR) - (NIR + BLUE)) / ((RED + SWIR) + (NIR + BLUE))', bandMap).rename('BSI');
  var dbsi = image.expression('(SWIR - NIR) / (SWIR + NIR + GREEN)', bandMap).rename('DBSI');
  var savi = image.expression('((NIR - RED) / (NIR + RED + 0.5)) * 1.5', bandMap).rename('SAVI');
  var evi = image.expression('2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 1))', bandMap).rename('EVI');
  var ci = image.expression('(NIR - GREEN) / (NIR + GREEN)', bandMap).rename('CI');
  var si = image.expression('(SWIR - GREEN) / (SWIR + GREEN)', bandMap).rename('SI');
  var ri = image.expression('(RED - BLUE) / (RED + BLUE)', bandMap).rename('RI');
  var bi = image.expression('(SWIR - RED) / (SWIR + RED)', bandMap).rename('BI');

  // Add all indices to the image
  image = image.addBands([ndbi, mndwi, bsi, dbsi, savi, evi, ci, si, ri, bi]);

  // Bare soil mask
  var bareSoil = bsi.gt(0).and(dbsi.gt(0)).and(savi.lt(0.2)).and(si.gt(0.1)).and(bi.gt(0));
  
  // Built-up mask excluding bare soil
  var built = ee.Image(0).where(ndbi.gt(-0.1).and(mndwi.lte(0)).and(bareSoil.not()), year).selfMask().clip(roi);
  var area = built.multiply(ee.Image.pixelArea().multiply(0.0001)).rename('area').divide(1e6);
  
  return built.toUint16().rename('built').addBands(area).set('year', year, 'system:time_start', start);
}));

// Urban expansion mapping
var dict = {
  'built_class_values': yearList,
  'built_class_palette': [
    '#2C7BB6', '#4EB3D3', '#74C45E', '#FFED6F', '#FEB24C', '#FC4E2A', '#CA0020', '#800026'
  ]
};

var yearPalette = ['#2c7bb6', '#abd9e9', '#74c476', '#ffffbf', '#feb24c', '#fc4e2a', '#e31a1c', '#800026'];

yearList.map(function(year, index) {
  var builtYear = builtCol.filter(ee.Filter.eq('year', year)).first();
  if (builtYear) {  
    var singleBand = builtYear.select('built');  
    var styledBuilt = singleBand.visualize({min: 1, max: 1, palette: [yearPalette[index]]});
    Map.addLayer(styledBuilt, {}, 'Built-up ' + year, false);
  }
});

var builtColWithTime = builtCol.map(function(image) {
  var time = ee.Image.constant(image.get('year')).rename('time').float();
  return image.addBands(time);
});

var urbanTrend = builtColWithTime.select(['time', 'built']).reduce(ee.Reducer.linearFit());
Map.addLayer(urbanTrend, {bands: ['scale'], min: -0.05, max: 0.05, palette: ['blue', 'white', 'red']}, 'Urban Trend');

var legend = ui.Panel([ui.Label('Urban expansion')], ui.Panel.Layout.flow('vertical'), { position: 'bottom-left' });
yearList.map(function(year, index) {
  legend.add(ui.Panel([
    ui.Label('', { width: '20px', height: '20px', backgroundColor: dict.built_class_palette[index], border: '0.5px solid black' }),
    ui.Label(year)
  ], ui.Panel.Layout.flow('horizontal')));
});
Map.add(legend);

// Add Title to Map
var title = ui.Label({
  value: 'Urban Expansion Analysis Using Landsat Data (1990-2025)',
  style: {
    fontSize: '18px',
    fontWeight: 'bold',
    color: 'black',
    backgroundColor: 'white',
    padding: '10px',
    margin: '10px'
  }
});
Map.add(title);
